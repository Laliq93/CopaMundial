CREATE OR REPLACE FUNCTION public.agregarapuestacantidad(
	_idlogro integer,
	_idusuario integer,
	_apuesta integer)
    RETURNS integer
    LANGUAGE 'plpgsql'

    COST 100
    VOLATILE 
AS $BODY$

BEGIN

INSERT INTO apuesta(idLogro , idUsuario, respuestacantidad, fechaCreacion) 
	values (_idlogro,_idUsuario,_apuesta, now());

	RETURN 1;
END;

$BODY$;

CREATE OR REPLACE FUNCTION public.agregarapuestaequipo(
	_idlogro integer,
	_idusuario integer,
	_apuesta integer)
    RETURNS integer
    LANGUAGE 'plpgsql'

    COST 100
    VOLATILE 
AS $BODY$

BEGIN

INSERT INTO apuesta(idLogro , idUsuario, respuestaequipo, fechaCreacion) 
	values (_idlogro,_idUsuario,_apuesta, now());

	RETURN 1;
END;

$BODY$;

CREATE OR REPLACE FUNCTION public.agregarapuestajugador(
	_idlogro integer,
	_idusuario integer,
	_apuesta integer)
    RETURNS integer
    LANGUAGE 'plpgsql'

    COST 100
    VOLATILE 
AS $BODY$

BEGIN

INSERT INTO apuesta(idLogro , idUsuario, respuestajugador, fechaCreacion) 
	values (_idlogro,_idUsuario,_apuesta, now());

	RETURN 1;
END;

$BODY$;

CREATE OR REPLACE FUNCTION public.agregarapuestavof(
	_idlogro integer,
	_idusuario integer,
	_apuesta boolean)
    RETURNS integer
    LANGUAGE 'plpgsql'

    COST 100
    VOLATILE 
AS $BODY$

BEGIN

INSERT INTO apuesta(idLogro , idUsuario, respuestaVOF, fechaCreacion) 
	values (_idlogro,_idUsuario,_apuesta, now());

	RETURN 1;
END;

$BODY$;

CREATE OR REPLACE FUNCTION public.verificarapuestaexiste(
	_idusuario integer,
	_idlogro integer)
    RETURNS TABLE(conteo bigint) 
    LANGUAGE 'plpgsql'

    COST 100
    VOLATILE 
    ROWS 1000
AS $BODY$

BEGIN
	RETURN QUERY SELECT count(idlogro) from apuesta where idlogro = _idLogro AND idusuario = _idUsuario;
END;

$BODY$;

CREATE OR REPLACE FUNCTION public.obtenerapuestascantidadencurso(
	_idusuario integer)
    RETURNS TABLE(logroid integer, logroenunciado character varying, respuestausuario integer, estadoapuesta character varying, fechaapuesta date) 
    LANGUAGE 'plpgsql'

    COST 100
    VOLATILE 
    ROWS 1000
AS $BODY$

BEGIN
	RETURN QUERY SELECT lo.lo_id, lo.lo_nombre, ap.respuestacantidad, ap.estado, ap.fechacreacion FROM logro_partido lo 
	INNER JOIN apuesta ap ON lo.lo_id = ap.idlogro WHERE lo.lo_fg_tipologro = 1 AND ap.estado = 'en curso' 
	AND ap.idusuario = _idusuario;
END;

$BODY$;

CREATE OR REPLACE FUNCTION public.obtenerapuestasequipoencurso(
	_idusuario integer)
    RETURNS TABLE(logroid integer, logroenunciado character varying, respuestausuario integer, estadoapuesta character varying, fechaapuesta date) 
    LANGUAGE 'plpgsql'

    COST 100
    VOLATILE 
    ROWS 1000
AS $BODY$

BEGIN
	RETURN QUERY SELECT lo.lo_id, lo.lo_nombre, ap.respuestaequipo, ap.estado, ap.fechacreacion FROM logro_partido lo 
	INNER JOIN apuesta ap ON lo.lo_id = ap.idlogro WHERE lo.lo_fg_tipologro = 3 AND ap.estado = 'en curso' 
	AND ap.idusuario = _idusuario;
END;

$BODY$;

CREATE OR REPLACE FUNCTION public.obtenerapuestasjugadorencurso(
	_idusuario integer)
    RETURNS TABLE(logroid integer, logroenunciado character varying, idjugador integer, nombrejugador character varying, 
				  apellidojugador character varying, estadoapuesta character varying, fechaapuesta date) 
    LANGUAGE 'plpgsql'

    COST 100
    VOLATILE 
    ROWS 1000
AS $BODY$

BEGIN
	RETURN QUERY SELECT lo.lo_id, lo.lo_nombre, ap.respuestajugador,ju.ju_nombre, ju.ju_apellido ,ap.estado, ap.fechacreacion FROM logro_partido lo 
	INNER JOIN apuesta ap ON lo.lo_id = ap.idlogro INNER JOIN jugador ju ON ju.ju_id = ap.respuestajugador WHERE lo.lo_fg_tipologro = 2 AND ap.estado = 'en curso' 
	AND ap.idusuario = _idusuario;
END;

$BODY$;


CREATE OR REPLACE FUNCTION public.obtenerapuestasvofencurso(
	_idusuario integer)
    RETURNS TABLE(logroid integer, logroenunciado character varying, respuestausuario boolean, estadoapuesta character varying, fechaapuesta date) 
    LANGUAGE 'plpgsql'

    COST 100
    VOLATILE 
    ROWS 1000
AS $BODY$

BEGIN
	RETURN QUERY SELECT lo.lo_id, lo.lo_nombre, ap.respuestavof, ap.estado, ap.fechacreacion FROM logro_partido lo 
	INNER JOIN apuesta ap ON lo.lo_id = ap.idlogro WHERE lo.lo_fg_tipologro = 4 AND ap.estado = 'en curso' 
	AND ap.idusuario = _idusuario;
END;

$BODY$;

CREATE OR REPLACE FUNCTION public.verificarapuestavalida(
	_idusuario integer,
	_idlogro integer)
    RETURNS TABLE(conteo bigint) 
    LANGUAGE 'plpgsql'

    COST 100
    VOLATILE 
    ROWS 1000
AS $BODY$

BEGIN
	RETURN QUERY select count(apuesta.idusuario) from apuesta inner join logro_partido ON apuesta.idlogro = logro_partido.lo_id 
	inner join partido on logro_partido.lo_resultado_pa = partido.pa_id where partido.pa_horainicio > now() 
	AND apuesta.idusuario = _idusuario AND logro_partido.lo_id = _idlogro;
END;

$BODY$;
	
CREATE OR REPLACE FUNCTION public.editarapuestavof(
	_idlogro integer,
	_idusuario integer,
	_apuesta boolean)
    RETURNS integer
    LANGUAGE 'plpgsql'

    COST 100
    VOLATILE 
AS $BODY$

BEGIN

UPDATE apuesta SET respuestavof = _apuesta WHERE idusuario = _idusuario AND idlogro = _idlogro;

	RETURN 1;
	
END;

$BODY$;

CREATE OR REPLACE FUNCTION public.editarapuestacantidad(
	_idlogro integer,
	_idusuario integer,
	_apuesta integer)
    RETURNS integer
    LANGUAGE 'plpgsql'

    COST 100
    VOLATILE 
AS $BODY$

BEGIN

UPDATE apuesta SET respuestacantidad = _apuesta WHERE idusuario = _idusuario AND idlogro = _idlogro;

	RETURN 1;
END;

$BODY$;

CREATE OR REPLACE FUNCTION public.editarapuestaequipo(
	_idlogro integer,
	_idusuario integer,
	_apuesta integer)
    RETURNS integer
    LANGUAGE 'plpgsql'

    COST 100
    VOLATILE 
AS $BODY$

BEGIN

UPDATE apuesta SET respuestaequipo = _apuesta WHERE idusuario = _idusuario AND idlogro = _idlogro;

	RETURN 1;
END;

$BODY$;

CREATE OR REPLACE FUNCTION public.editarapuestajugador(
	_idlogro integer,
	_idusuario integer,
	_apuesta integer)
    RETURNS integer
    LANGUAGE 'plpgsql'

    COST 100
    VOLATILE 
AS $BODY$

BEGIN

UPDATE apuesta SET respuestajugador = _apuesta WHERE idusuario = _idusuario AND idlogro = _idlogro;

	RETURN 1;
END;

$BODY$;

CREATE OR REPLACE FUNCTION public.eliminarapuesta(
	_idusuario integer,
	_idlogro integer)
    RETURNS integer
    LANGUAGE 'plpgsql'

    COST 100
    VOLATILE 
AS $BODY$

BEGIN

	DELETE FROM apuesta WHERE idusuario = _idusuario AND idlogro = _idlogro;

	RETURN 1;
END;

$BODY$;
